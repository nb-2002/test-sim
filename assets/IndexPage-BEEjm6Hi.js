import{d as r,r as l,o as u,c as d,a as n,n as h,b as x}from"./index-B1DX5EAj.js";class g{sensorCoord=[[22,25],[27,25],[73,25],[78,25]];sensorSensed=[!1,!1,!1,!1];operation=[[]];movement=[];objectRect=[[0,0],[100,50]];buttonClicked=!1;isPlaced=!1;constructor(i,t){i&&(this.sensorCoord=i),t&&(this.operation=t)}drawObject(i){if(i.context&&this.isPlaced){i.context.save(),i.context.translate(10,40),i.context.beginPath(),i.context.strokeStyle="#505050",i.context.lineWidth=2,i.context.strokeRect(this.objectRect[0][0],this.objectRect[0][1],this.objectRect[1][0],this.objectRect[1][1]),i.context.closePath(),i.context.beginPath(),i.context.fillStyle="#11aa11",i.context.arc(this.objectRect[1][0]/2,this.objectRect[0][1],4,0,Math.PI*2),i.context.fill(),i.context.closePath(),i.context.beginPath(),i.context.fillStyle="#1111aa";for(const t of this.sensorCoord)i.context.arc(t[0],t[1],2,0,Math.PI*2),i.context.fill();i.context.closePath(),i.context.restore()}}buttonClick(i){this.buttonClicked=!this.buttonClicked,i.isMoveButtonClicked=!1,i.isDrawButtonClicked=!1,this.isPlaced||(this.isPlaced=!0,this.drawObject(i))}}class c{canvas=null;context=null;scale=1;originX=0;originY=0;isDragging=!1;lastX=0;lastY=0;isMoveButtonClicked=!1;isDrawButtonClicked=!1;isTrackPointDragged=!1;arrayTrackPoints=[[[]]];atpi=0;object=new g(null,null);constructor(i){this.canvas=i}resizeCanvas(){this.canvas&&(this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.draw())}onWheel(i){i.preventDefault();const t=i.deltaY<0?1.1:.9;this.scale*=t;const o=i.clientX,s=i.clientY;this.originX=o-(o-this.originX)*t,this.originY=s-(s-this.originY)*t,this.draw()}onMouseDown(i){if(this.isDragging=!0,this.lastX=i.clientX,this.lastY=i.clientY,this.isDrawButtonClicked){const t=(this.lastX-this.originX)/this.scale,o=(this.lastY-this.originY)/this.scale;this.atpi==0?(this.arrayTrackPoints.length==0?this.arrayTrackPoints.push([[t,o]]):(this.arrayTrackPoints[0][0].push(t),this.arrayTrackPoints[0][0].push(o)),this.atpi++):(this.arrayTrackPoints[this.atpi-1].length<=2&&this.arrayTrackPoints[this.atpi-1].push([t,o]),this.arrayTrackPoints.push([[t,o]]),this.atpi++),this.draw()}}onMouseMove(i){if(this.isDragging&&this.isMoveButtonClicked){const t=i.clientX-this.lastX,o=i.clientY-this.lastY;this.originX+=t,this.originY+=o,this.lastX=i.clientX,this.lastY=i.clientY,this.draw()}this.isDragging&&this.isDrawButtonClicked&&(this.isTrackPointDragged=!0,this.lastX=i.clientX,this.lastY=i.clientY,this.draw())}onMouseUp(){this.isDragging=!1,this.isTrackPointDragged&&this.arrayTrackPoints[this.atpi-1].push([(this.lastX-this.originX)/this.scale,(this.lastY-this.originY)/this.scale]),this.isTrackPointDragged=!1}draw(){this.canvas&&(this.context=this.canvas.getContext("2d"))&&(this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.context.save(),this.context.translate(this.originX,this.originY),this.context.scale(this.scale,this.scale),this.drawGrid(),this.drawAxis(),this.object.drawObject(this),this.drawTrack(),this.context.restore())}drawGrid(){if(this.context){const i=50*this.scale;this.context.strokeStyle="#ccc",this.context.lineWidth=this.scale>5?1:this.scale<.2?4:2;for(let t=(Math.floor(-this.originX/i)*i-(Math.floor(this.canvas.width/50)%2?i/2:0))/this.scale;t<(this.canvas.width-this.originX)/this.scale;t+=i/this.scale)this.context.beginPath(),this.context.moveTo(t,-this.originY/this.scale),this.context.lineTo(t,(this.canvas.height-this.originY)/this.scale),this.context.stroke(),this.context.closePath();for(let t=(Math.floor(-this.originY/i)*i-(Math.floor(this.canvas.width/50)%2?i/2:0))/this.scale;t<(this.canvas.height-this.originY)/this.scale;t+=i/this.scale)this.context.beginPath(),this.context.moveTo(-this.originX/this.scale,t),this.context.lineTo((this.canvas.width-this.originX)/this.scale,t),this.context.stroke(),this.context.closePath()}}drawAxis(){this.context&&(this.context.strokeStyle="#a0a0a0",this.context.lineWidth=3,this.context.beginPath(),this.context.moveTo(Math.floor(this.canvas.width/50)/2*50,-this.originY/this.scale),this.context.lineTo(Math.floor(this.canvas.width/50)/2*50,(this.canvas.height-this.originY)/this.scale),this.context.moveTo(-this.originX/this.scale,Math.floor(this.canvas.height/50)/2*50),this.context.lineTo((this.canvas.width-this.originX)/this.scale,Math.floor(this.canvas.height/50)/2*50),this.context.stroke(),this.context.closePath())}drawTrack(){if(this.context)for(const[i,t]of this.arrayTrackPoints.entries()){if(this.isTrackPointDragged&&i==this.atpi-1){this.context.beginPath(),this.context.arc((this.lastX-this.originX)/this.scale,(this.lastY-this.originY)/this.scale,5,0,Math.PI*2),this.context.fillStyle="#1111aa",this.context.fill(),this.context.closePath();continue}t.length==2?(this.context.strokeStyle="#111111",this.context.lineWidth=50,this.context.beginPath(),this.context.moveTo(t[0][0],t[0][1]),this.context.lineTo(t[1][0],t[1][1]),this.context.stroke(),this.context.closePath()):t.length==3&&(this.context.strokeStyle="#111111",this.context.lineWidth=50,this.context.beginPath(),this.context.moveTo(t[0][0],t[0][1]),this.context.quadraticCurveTo(t[1][0],t[1][1],t[2][0],t[2][1]),this.context.stroke(),this.context.closePath()),i>0&&i<this.atpi-1&&(this.context.beginPath(),this.context.arc(t[0][0],t[0][1],25,0,Math.PI*2),this.context.fillStyle="#111111",this.context.fill(),this.context.closePath())}}centerButton(){this.originX=0,this.originY=0,this.scale=1,this.draw()}moveButtonClick(){this.object.buttonClicked=!1,this.isDrawButtonClicked=!1,this.isMoveButtonClicked=!this.isMoveButtonClicked}drawButtonClick(){this.object.buttonClicked=!1,this.isMoveButtonClicked=!1,this.isDrawButtonClicked=!this.isDrawButtonClicked}undoButton(){this.atpi>0&&(console.log(this.atpi,this.arrayTrackPoints),this.arrayTrackPoints.pop(),this.atpi-=1,this.atpi>0&&this.arrayTrackPoints[this.atpi-1].pop(),this.draw())}}const f={class:"canvas-container"},k={class:"onCanvas"},v=r({__name:"IndexPage",setup(a){const i=l(null),t=l(new c(i.value));return u(()=>{i.value&&(t.value=new c(i.value),t.value.resizeCanvas()),window.addEventListener("resize",t.value.resizeCanvas)}),(o,s)=>(x(),d("div",f,[n("div",k,[n("button",{class:"button",onClick:s[0]||(s[0]=(...e)=>t.value.centerButton&&t.value.centerButton(...e))}," center "),n("button",{class:h(["button buttons",{button_active:t.value?.isMoveButtonClicked}]),onClick:s[1]||(s[1]=e=>t.value.moveButtonClick())}," move ",2),n("button",{class:h(["button buttons",{button_active:t.value?.isDrawButtonClicked}]),onClick:s[2]||(s[2]=e=>t.value.drawButtonClick())}," draw ",2),n("button",{class:"button buttons",onClick:s[3]||(s[3]=(...e)=>t.value.undoButton&&t.value.undoButton(...e))}," undo "),n("button",{class:h(["button buttons",{button_active:t.value?.object.buttonClicked}]),onClick:s[4]||(s[4]=e=>t.value.object.buttonClick(t.value))}," object ",2)]),n("canvas",{onWheel:s[5]||(s[5]=(...e)=>t.value.onWheel&&t.value.onWheel(...e)),onMousedown:s[6]||(s[6]=(...e)=>t.value.onMouseDown&&t.value.onMouseDown(...e)),onMouseup:s[7]||(s[7]=(...e)=>t.value.onMouseUp&&t.value.onMouseUp(...e)),onMouseleave:s[8]||(s[8]=(...e)=>t.value.onMouseUp&&t.value.onMouseUp(...e)),onMousemove:s[9]||(s[9]=(...e)=>t.value.onMouseMove&&t.value.onMouseMove(...e)),ref_key:"refcanvas",ref:i},null,544)]))}}),b=(a,i)=>{const t=a.__vccOpts||a;for(const[o,s]of i)t[o]=s;return t},P=b(v,[["__scopeId","data-v-390b3bf1"]]);export{P as default};
